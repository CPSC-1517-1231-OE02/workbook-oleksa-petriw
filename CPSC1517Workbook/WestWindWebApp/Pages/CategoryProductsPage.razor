@page "/category-products"
@page "/category-products/{CategoryId}"

@using WestWindSystem.BLL
@using WestWindSystem.Entities

<h3>Category Products</h3>

<fieldset class="mb-3">
    <legend>Category Selection</legend>
    <div class="row row-cols-lg-auto g-3 align-items-center">
        <div class="cols-12">
            <label class="visually-hidden" for"category">Category:</label>
            <select class="form-select" id="category" @bind="CategoryId">
                <option selected disabled>Select a category</option>
                @if (Categories != null)
                {
                    @foreach (var c in Categories)
                    {
                        <option value="@c.CategoryId">@c.Description</option>
                    }
                }
            </select>        
        </div>
        <div class="cols-12">
            <button class="btn btn-primary" @onclick="HandleCategorySelected">Get Products</button>
        </div>
    </div>
</fieldset>

@if (Products != null)
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Product Id</th>
                <th>Name</th>
                <th>Discontinued</th>
                <th>Unit Price</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var p in Products)
            {
                <tr>
                    <td>@p.ProductId</td>
                    <td>@p.ProductName</td>
                    <td>@p.Discontinued</td>
                    <td class="text-end">@($"{p.UnitPrice:C}")</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    [Inject]
    CategoryServices CategoryServices { get; set; }
    [Inject]
    ProductServices ProductServices { get; set; }
    [Inject]
    NavigationManager NavigationManager { get; set; }

    public List<Category>? Categories { get; set; } = null;
    public List<Product>? Products { get; set; } = null;

    [Parameter]
    public string? CategoryId { get; set; } = null;

    protected override void OnInitialized()
    {
        Categories = CategoryServices.GetAllCategories();

        if (CategoryId != null)
        {
            Products = ProductServices.GetProductsByCategoryId(int.Parse(CategoryId));
        }

        base.OnInitialized();
    }

    private void HandleCategorySelected()
    {
        if (CategoryId != null)
        {
            Products = ProductServices.GetProductsByCategoryId(int.Parse(CategoryId));
            NavigationManager.NavigateTo($"/category-products/{CategoryId}");
        }
    }
}